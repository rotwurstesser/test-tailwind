class Sounds{		private var mc:MovieClip;	private var soundbtn:MovieClip;		public static var listofsounds:Array = new Array();		private var edition:Object;	//private var endcharge:Boolean;			public function Sounds(){} //end constructor		public function loadSounds(IDsound:Number, cible:MovieClip, mysoundurl:String){						var mysound:Sound = new Sound();		mysound.onLoad = function(success:Boolean){			if (success){								trace("sound ok");								mysound.start(0,2);				mc = cible.createEmptyMovieClip("sound"+IDsound, IDsound+100 );								mc.attachMovie("bgsound", "bg",0);				mc._x = IDsound*80 + 100;				mc._y = 80;								var myvolume = 0;				listofsounds[IDsound] = [mysoundurl, myvolume];				soundbtn = mc.createEmptyMovieClip("soundbtn", 1 );								soundbtn.attachMovie("soundbutton", "snd",0);								soundbtn._y = 100;								soundbtn.onPress = function(){								startDrag(this, false, 0,0,0,100);											}				soundbtn.onRelease = function(){					stopDrag();					var newvolume = 100-this._y;					mysound.setVolume(newvolume) ;					modifyVolume(this.ID, newvolume);				}								soundbtn.ID = IDsound;				soundbtn.onEnterFrame = function(){										mysound.setVolume(100-this._y) ;												}							}		};								mysound.loadSound(mysoundurl, false); //false = no streaming				loop_sound();		  		function  loop_sound() {			mysound.onSoundComplete = function(){			mysound.start(0,2); 			loop_sound()			}}							}	// end loadSounds						public static function modifyVolume(soundtomodify:Number, newvolume:Number){		listofsounds[soundtomodify][1] = newvolume;		trace("newvolume: "+newvolume);		trace("listofsounds: "+listofsounds);	}				public function getListOfSounds(){		return (listofsounds);	}					}//end class